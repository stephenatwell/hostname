---
apiVersion: v1
kind: Namespace
metadata:
  name: '${ parameters.namespace ?: staging }'
  annotations:
    app: hostname
    owner: stephen
    otherAnnotation: testValue
spec:
  finalizers:
  - kubernetes
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hostname
  namespace: '${ parameters.namespace ?: staging }'
  annotations:
    app: hostname
    owner: stephen
    otherAnnotation: testValue
spec:
  replicas: '${ #toInt( parameters.replicas ?: 3) }'
  selector:
    matchLabels:
      app: hostname
      version: v1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9113'
        app: hostname
        owner: stephen
        otherAnnotation: testValue
      labels:
        app: hostname
        version: v1
    spec:
      containers:
      - image: rstarmer/hostname:v1
        imagePullPolicy: Always
        name: hostname
        resources: {}
        volumeMounts: 
        - mountPath: /etc/nginx/conf.d/nginx-status.conf
          name: nginx-status-conf
          readOnly: true
          subPath: nginx.status.conf
      - name: nginx-exporter
        image: 'nginx/nginx-prometheus-exporter:0.3.0' #0.3.0 has vulnerabilities, 0.9.0 does not. 
        args:
          - '-nginx.scrape-uri=http://localhost:8090/nginx_status'
        ports:
          - name: nginx-ex-port
            containerPort: 9113
            protocol: TCP
        imagePullPolicy: Always
      restartPolicy: Always
      volumes:
      - configMap:
          defaultMode: 420
          name: nginx-status-conf
        name: nginx-status-conf
 
  
---
apiVersion: v1
data:
  nginx.status.conf: |
    server {
        listen       8090 default_server;
        location /nginx_status {
            stub_status;
            access_log off;
        }
    }
kind: ConfigMap
metadata:
  name: nginx-status-conf
  namespace: '${ parameters.namespace ?: staging }'
  annotations:
    app: hostname
    owner: stephen
    otherAnnotation: testValue
